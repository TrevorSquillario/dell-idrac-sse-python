
x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"
    tag: "{{.Name}}"
    
services:
  idrac-sse:
    container_name: idrac-sse
    build:
      context: ./src/idrac-sse
    restart: unless-stopped
    environment:
      - LOGLEVEL=INFO
      - iDRAC_USERNAME=root
      - iDRAC_PASSWORD
      - OTEL_RECEIVER=http://${OTEL_COLLECTOR_HOST}:${OTEL_COLLECTOR_PORT_HTTP}
      - HTTP_RECEIVER
    volumes:
      - ./hosts:/code/app/hosts
    #network_mode: host
    networks:
      - idrac-sse-demo

  # Generate SSL Certificate: openssl req -x509 -newkey rsa:4096 -nodes -out cert.pem -keyout key.pem -days 365
  idrac-sse-testserver:
    container_name: idrac-sse-testserver
    build:
      context: ./src/test-server
    restart: unless-stopped
    ports:
      - 8443:443
    networks:
      - idrac-sse-demo

  otel-collector:
    image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    deploy:
      resources:
        limits:
          memory: 200M
    restart: unless-stopped
    command: [ "--config=/etc/otelcol-config.yml" ]
    user: 0:0
    volumes:
      - ${HOST_FILESYSTEM}:/hostfs:ro
      - ${DOCKER_SOCK}:/var/run/docker.sock:ro
      - ${OTEL_COLLECTOR_CONFIG}:/etc/otelcol-config.yml
    ports:
      - "${OTEL_COLLECTOR_PORT_GRPC}"
      - "${OTEL_COLLECTOR_PORT_HTTP}:${OTEL_COLLECTOR_PORT_HTTP}"
    logging: *logging
    environment:
      - ENVOY_PORT
      - HOST_FILESYSTEM
      - OTEL_COLLECTOR_HOST
      - OTEL_COLLECTOR_PORT_GRPC
      - OTEL_COLLECTOR_PORT_HTTP
    networks:
      - idrac-sse-demo

networks:
  idrac-sse-demo:
    driver: bridge